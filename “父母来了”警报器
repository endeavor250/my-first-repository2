#include <Adafruit_NeoPixel.h>//引用头文件
#define LEDPIN 4   /*定义了控制LED的引脚，6表示Microduino的D6引脚，可通过Hub转接出来，用户可以更改 */
#define PIN_NUM 1 /*定义允许接的led灯的个数 */
#define  sensorPin  6  //人体红外的传感器接口。
#define buzzer_pin 8 //定义蜂鸣器驱动引脚。
#define buzzer_fre 600 //定义蜂鸣器输出频率。
    

    int state;   //人体红外传感器传回来的值。
    Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIN_NUM, LEDPIN, NEO_GRB + NEO_KHZ800); //该函数第一个参数控制串联灯的个数，第二个是控制用哪个pin脚输出，第三个显示颜色和变化闪烁频率    
    
#include "U8glib.h"

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);  // HW SPI Com: CS = 10, A0 = 9 (Hardware Pins are  SCK = 13 and MOSI = 11)

//static unsigned char u8g_logo_bits[] = {
static unsigned char u8g_logo_bits[] U8G_PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x01,0xE0,
  0x03,0x00,0x00,0x00,0x00,0x7E,0x00,0xF0,0x01,0x00,0x00,0x00,
  0x00,0xFE,0xF9,0xF7,0x07,0x00,0x00,0x00,0x00,0x3C,0x00,0xF8,
  0x03,0x00,0x00,0x00,0x00,0xFC,0xF9,0xE1,0x03,0x00,0x00,0x00,
  0x00,0x38,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,
  0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xFC,0xEF,0xF9,0x8F,0xD7,0x73,0xF1,0xC1,0x3B,0x9F,0xFF,
  0xFF,0x1E,0x3E,0x00,0x00,0xBC,0xEF,0xC1,0xE1,0x9F,0xFF,0xDD,
  0xE3,0x3F,0xCC,0xE1,0xF0,0xBF,0x7B,0x00,0x00,0x3C,0xF7,0xE1,
  0xE1,0x9F,0xFF,0xC6,0xF7,0x3E,0x8E,0xF3,0xF0,0xFF,0xF8,0x00,
  0x00,0x3C,0xF3,0xE1,0xF1,0x93,0xFF,0xE6,0xF7,0x3C,0x8F,0xF7,
  0xF0,0xFF,0xFC,0x00,0x00,0x7C,0xF2,0xE1,0xF1,0x83,0x87,0xFE,
  0xF7,0x39,0xFF,0xF7,0xF0,0xFF,0xFF,0x00,0x00,0x7C,0xF0,0xE3,
  0xF3,0xA3,0x03,0xFE,0xF7,0x3F,0xFF,0xF7,0x71,0xFC,0xFF,0x00,
  0x00,0x7C,0xF8,0xE3,0xF3,0xBF,0x03,0xFE,0xE3,0x3F,0xFF,0xF3,
  0x71,0xDC,0x7F,0x00,0x00,0x7E,0xFC,0xE7,0xE3,0xBF,0x03,0xFC,
  0xE3,0x3F,0xFE,0xF3,0x71,0x9C,0x7F,0x00,0x00,0xC1,0x03,0xF8,
  0xCF,0xE7,0x0F,0xF0,0x00,0x7F,0xFC,0xFC,0xFF,0x3E,0x1E,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
//阳码、逐行、逆向
static unsigned char u8g_logo_bits1[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,
0x00,0x1C,0x18,0x00,0x00,0x1C,0x20,0x00,0x00,0x0E,0xC0,0x00,0x00,0x07,0x80,0x03,
0x80,0x01,0x00,0x07,0xC0,0x00,0x00,0x0E,0x60,0x00,0x20,0x0C,0x30,0x02,0x60,0x08,
0x0C,0x02,0x60,0x00,0x00,0x04,0x30,0x00,0x00,0x04,0x30,0x00,0x00,0x08,0x18,0x00,
0x00,0x08,0x18,0x00,0x00,0x10,0x0C,0x00,0x00,0x30,0x0C,0x00,0x00,0x60,0x06,0x00,
0x00,0xC0,0x03,0x00,0x00,0xC0,0x03,0x00,0x00,0x80,0x03,0x00,0x00,0xC0,0x07,0x00,
0x00,0x60,0x0E,0x00,0x00,0x38,0x38,0x00,0x00,0x0C,0xF0,0x01,0x00,0x07,0xC0,0x1F,
0xC0,0x01,0x00,0x3F,0x30,0x00,0x00,0x08,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//父0
};

static unsigned char u8g_logo_bits2[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0xFF,0xFF,0x03,
0x00,0x01,0x00,0x03,0x80,0x21,0x00,0x03,0x80,0xC1,0x00,0x03,0x80,0x81,0x01,0x01,
0x80,0x81,0x81,0x01,0x80,0x81,0x83,0x01,0x80,0x01,0x81,0x01,0x80,0x01,0x81,0x01,
0x80,0x01,0x80,0x19,0xFE,0xFF,0xFF,0x3F,0x80,0x00,0x80,0x01,0xC0,0x20,0x80,0x01,
0xC0,0xC0,0x80,0x01,0xC0,0xC0,0x81,0x01,0xC0,0x80,0x81,0x01,0xC0,0x80,0x83,0x01,
0xC0,0x00,0x81,0x01,0xC0,0x00,0x80,0x00,0xC0,0x00,0xC0,0x18,0xE0,0xFF,0xFF,0x3F,
0x40,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC2,0x00,
0x00,0x00,0x7C,0x00,0x00,0x00,0x78,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,//母1
};

static unsigned char u8g_logo_bits3[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x03,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x06,0xF0,0xFF,0xFF,0x0F,
0x00,0x80,0x01,0x00,0x80,0x80,0x81,0x00,0x00,0x83,0x81,0x01,0x00,0x87,0xC1,0x01,
0x00,0x8E,0xC1,0x00,0x00,0x8E,0x61,0x00,0x00,0x84,0x31,0x00,0x00,0x84,0x11,0x18,
0xFC,0xFF,0xFF,0x3F,0x00,0xE0,0x05,0x00,0x00,0xE0,0x05,0x00,0x00,0xB0,0x09,0x00,
0x00,0x98,0x19,0x00,0x00,0x98,0x11,0x00,0x00,0x8C,0x61,0x00,0x00,0x86,0xE1,0x00,
0x00,0x83,0xC1,0x01,0x80,0x81,0x81,0x07,0x40,0x80,0x01,0x3E,0x30,0x80,0x01,0x1C,
0x08,0x80,0x01,0x00,0x04,0x80,0x01,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,//来2
};

static unsigned char u8g_logo_bits4[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,
0xF0,0xFF,0xFF,0x07,0x00,0x00,0x80,0x0F,0x00,0x00,0xC0,0x01,0x00,0x00,0x60,0x00,
0x00,0x00,0x30,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x04,0x00,0x00,0x80,0x03,0x00,
0x00,0x80,0x03,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x86,0x01,0x00,
0x00,0xF8,0x01,0x00,0x00,0xE0,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,//了3
};


static unsigned char u8g_logo_bits5[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x1C,
0xFC,0xFF,0xFF,0x3F,0x00,0x00,0x03,0x00,0x00,0x80,0x03,0x00,0x00,0x80,0x01,0x00,
0x00,0xC0,0x01,0x00,0x00,0xC0,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xE0,0x03,0x00,
0x00,0xB0,0x01,0x00,0x00,0xB8,0x31,0x00,0x00,0x98,0x41,0x00,0x00,0x8C,0x81,0x01,
0x00,0x86,0x01,0x03,0x00,0x83,0x01,0x06,0x80,0x81,0x01,0x0E,0xC0,0x80,0x01,0x1C,
0x60,0x80,0x01,0x18,0x30,0x80,0x01,0x18,0x08,0x80,0x01,0x10,0x04,0x80,0x01,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,//不2
};


static unsigned char u8g_logo_bits6[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0xC0,0x01,0x00,
0x00,0x60,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x30,0x00,0x0C,0xFC,0xFF,0xFF,0x1F,
0x00,0x10,0x00,0x00,0x00,0x18,0x04,0x00,0x00,0x08,0x0C,0x00,0x00,0x0C,0x0C,0x00,
0x00,0x06,0x0C,0x00,0x00,0x06,0x0C,0x00,0x80,0x03,0x0C,0x00,0x80,0x01,0x0C,0x06,
0xC0,0xF9,0xFF,0x0F,0xE0,0x01,0x0C,0x00,0xB0,0x01,0x0C,0x00,0x98,0x01,0x0C,0x00,
0x84,0x01,0x0C,0x00,0x82,0x01,0x0C,0x00,0x80,0x01,0x0C,0x00,0x80,0x01,0x0C,0x00,
0x80,0x01,0x0C,0x00,0x80,0x01,0x0C,0x00,0x80,0x01,0x0C,0x18,0x80,0xFF,0xFF,0x3F,
0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//在3

};










long timer;
int pkj=0;


void draw(void) {
  u8g.setFont(u8g_font_7x14);
  u8g.setPrintPos(pkj, 64); 
  u8g.print("Welcome! www.microduino.cc");
  u8g.drawXBMP( 0, 0, 128, 18, u8g_logo_bits);
  u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits1);
  u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits2);
  u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits3);
  u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits4);
}    

void draw2(void) {
  u8g.setFont(u8g_font_7x14);
  u8g.setPrintPos(pkj, 64); 
  u8g.print("Welcome! www.microduino.cc");
  u8g.drawXBMP( 0, 0, 128, 18, u8g_logo_bits);
  u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits1);
  u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits2);
  u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits5);
  u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits6);
}    


    
    
void setup() 
{
  strip.begin();   //准备对led进行数据发送
  pinMode(sensorPin, INPUT);
  Serial.begin(9600);
  pinMode(buzzer_pin,OUTPUT);
   // flip screen, if required
  // u8g.setRot180();
  timer=millis();
}

void loop() 
{
  state = digitalRead(sensorPin);
  if (state == 1)
{
  Serial.println("your parents are coming!!!!!!!!!!!!!!!!!!");
  // picture loop
  if(millis()-timer>2)
  {
    timer=millis();
    pkj-=4;
//    if(pkj<-150)
//      pkj=150;
  }
  u8g.firstPage();  
  do {
    draw();
  } 
  while( u8g.nextPage() );

    tone(buzzer_pin,buzzer_fre);    //驱动蜂鸣器
    delay(200);
    noTone(buzzer_pin);
    strip.setPixelColor(0, strip.Color(255, 0, 0));//红光
    strip.show();   //LED显示
    delay(100);  //延迟1秒输出
    strip.setPixelColor(0, strip.Color(0, 255, 0));//绿光
    strip.show();  //LED显示
    delay(100);  //延迟1秒输出
    strip.setPixelColor(0, strip.Color(0, 0, 255));//蓝光
    strip.show();  //LED显示
    delay(100);  //延迟1秒输出
    strip.setPixelColor(0, strip.Color(0, 0, 0));//灭
    strip.show();  //LED显示
    delay(1000);  //延迟1秒输出

  }

  else
{
    Serial.println("There is nobody!!!!  play casually!!!!");
      // picture loop
  if(millis()-timer>2)
  {
    timer=millis();
    pkj-=4;
//    if(pkj<-150)
//      pkj=150;
  }
  u8g.firstPage();  
  do {
    draw2();
  } 
  while( u8g.nextPage() );
    delay(100);
}
delay(1000);


}
